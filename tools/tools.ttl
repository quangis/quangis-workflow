# [SC][TODO] ambiguous references to arcpro tools in workflows for "tools:VelocityField" (lines 230 and 235) and "tools:CalculatePartialAmounts" (line 562)

#[SC][TODO] measurement level prefix

@base <https://github.com/quangis/cct/blob/master/tools/tools.ttl#>.

@prefix : <https://github.com/quangis/cct/blob/master/tools/tools.ttl#>.
@prefix cct: <https://github.com/quangis/cct#>.
@prefix wf: <http://geographicknowledge.de/vocab/Workflow.rdf#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
# @prefix tools: <http://geographicknowledge.de/vocab/GISTools.rdf#>.
@prefix tools: <https://github.com/quangis/cct/blob/master/tools/tools.ttl#>.
@prefix ccd: <http://geographicknowledge.de/vocab/CoreConceptData.rdf#>.
@prefix exm: <http://geographicknowledge.de/vocab/ExtensiveMeasures.rdf#>.

# [SC] tool prefixes
@prefix arcprodm: <https://pro.arcgis.com/en/pro-app/latest/tool-reference/data-management/>.
@prefix arcpro3d: <https://pro.arcgis.com/en/pro-app/latest/tool-reference/3d-analyst/>.
@prefix arcproan: <https://pro.arcgis.com/en/pro-app/latest/tool-reference/analysis/>.
@prefix arcprona: <https://pro.arcgis.com/en/pro-app/latest/tool-reference/network-analyst/>.
@prefix arcprosa: <https://pro.arcgis.com/en/pro-app/latest/tool-reference/spatial-analyst/>.
@prefix arcproco: <https://pro.arcgis.com/en/pro-app/latest/tool-reference/conversion/>.



##################################################
# [SC] arcpro tools

arcprodm:add-geometry-attributes.htm a :ToolImplementation;
    tools:implements tools:AddObjectVectorRegionArea.

arcpro3d:aspect.htm a :ToolImplementation;
    tools:implements tools:Aspect.

##Buffer (interpreted as vector representation of boolean field)
arcproan:buffer.htm a :ToolImplementation;
    tools:implements tools:ObjectBuffer.

#Builds ratio network from line objects
arcprona:build-network.htm a :ToolImplementation;
    tools:implements tools:BuildNetwork.

arcprodm:clip.htm a :ToolImplementation;
    tools:implements 
        tools:ClipObject2Object, 
        tools:ClipNomFieldVector2Extent, 
        tools:ClipBoolFieldVector2Extent, 
        tools:ClipFieldRaster2ObjectExtent,
        tools:ClipDef.

arcprosa:con-.htm a :ToolImplementation;
    tools:implements 
        tools:con1, 
        tools:con2, 
        tools:con3.

##Merge object parts into single object
arcprodm:dissolve.htm a :ToolImplementation;
    tools:implements tools:MergeObjects.

##Erase Vector fields
arcproan:erase.htm a :ToolImplementation;
    tools:implements tools:EraseFieldExtentfromFieldVector.

arcprosa:extract-by-mask.htm a :ToolImplementation;
    tools:implements tools:ExtractByMask.

##Feature class to feature class (=Select)
arcproco:feature-class-to-feature-class.htm a :ToolImplementation;
    tools:implements tools:FC2FCObjectTess.

#Flow direction accumulation
arcprosa:flow-accumulation.htm a :ToolImplementation;
    tools:implements tools:FlowAccumulation.

#Flow direction raster
arcprosa:flow-direction.htm a :ToolImplementation;
    tools:implements tools:FlowDirection.

arcprosa:flow-length.htm a :ToolImplementation;
    tools:implements tools:FlowLength.

#Near tool, to seach for the closest objects using Euclidean distance
arcproan:generate-near-table.htm a :ToolImplementation;
    tools:implements tools:NearPointObjects.

arcprosa:idw.htm a :ToolImplementation;
    tools:implements tools:IDWInterval.

arcprosa:kriging.htm a :ToolImplementation;
    tools:implements tools:KrigingInterval.

#<https://pro.arcgis.com/en/pro-app/tool-reference/conversion/polygon-to-raster.htm>
###Field Polygon to raster
arcproco:polygon-to-raster.htm a :ToolImplementation;
    tools:implements 
        tools:CoverageToNominalFieldRaster, 
        tools:ContourToFieldRaster.

arcprosa:raster-calculator.htm a :ToolImplementation;
    tools:implements 
        ### local map algebra transformation invert
        tools:LocalMapAlgebraInvert,
        ### local map algebra divide
        tools:LocalMapAlgebraDivide,
        ### local map algebra with only a single input layer
        tools:LocalMapAlgebraSubOrder, 
        tools:LocalMapAlgebraSubRatio,
        tools:RasterCalculatorDef,
        tools:RasterCalculator1Def.
    
arcproco:raster-to-polygon.htm a :ToolImplementation;
    tools:implements tools:RegionFromRasterExtent.

arcprosa:reclassify.htm a :ToolImplementation;
    tools:implements tools:RasterToIsoRaster.

##Select object by extent
arcproan:select.htm a :ToolImplementation;
    tools:implements tools:SelectObjectbyExtent. 

#Slope computation
arcprosa:slope.htm a :ToolImplementation;
   tools:implements tools:Slope.

#Snap point to raster
arcprosa:snap-pour-point.htm a :ToolImplementation;
    tools:implements tools:SnapPourPoint.

arcproan:spatial-join.htm a :ToolImplementation;
    tools:implements 
        # with JOIN_ONE_TO_ONE parameter, with Merge_RULe sum for Ratio data.
        tools:SpatialJoinSumTessRatio,
        # with JOIN_ONE_TO_ONE parameter, with Merge_RULe sum for Count data.
        tools:SpatialJoinSumTessCount,
        # with JOIN_ONE_TO_ONE parameter, with Merge_RULe sum for Ratio data.
        tools:SpatialJoinAmountSumTessRatio,
        # with JOIN_ONE_TO_ONE parameter, with Merge_RULe sum for Count data.
        tools:SpatialJoinAmountSumTessCount,
        # with JOIN_ONE_TO_ONE parameter, with Merge_RULe mean for interval data.
        tools:SpatialJoinMeanTessInterval,
        # with JOIN_ONE_TO_ONE parameter, with Merge_RULe mean for Ratio data.
        tools:SpatialJoinMeanTessRatio,
        # with JOIN_ONE_TO_ONE parameter, with Merge_RULe mean for Count data.
        tools:SpatialJoinMeanTessCount,
        # with JOIN_ONE_TO_ONE parameter and with Merge_RULe count.
        tools:SpatialJoinCountTess.

##Summary statistics for amounts
arcproan:summary-statistics.htm a :ToolImplementation;
    tools:implements 
        tools:ObjectSummaryStatisticsAmount, 
        tools:SummaryStatisticsAmount. 

arcprosa:watershed.htm a :ToolImplementation;
    tools:implements tools:Watershed.


##################################################
# [SC] these arcpro tools need to be annotated

tools:ClipDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorRegionA, ccd:NominalA ];
    :input [ :id 2; a ccd:CoreConceptQ, ccd:VectorRegionA, ccd:NominalA ];
    wf:output [ a ccd:CoreConceptQ, ccd:VectorRegionA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Clip arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".
    
tools:RasterCalculatorDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:RasterA, ccd:NominalA ];
    :input [ :id 2; a ccd:CoreConceptQ, ccd:RasterA, ccd:NominalA ];
    wf:output [ a ccd:CoreConceptQ, ccd:RasterA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Raster Calculator arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".
    
tools:RasterCalculator1Def a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:RasterA, ccd:NominalA ];    
    wf:output [ a ccd:CoreConceptQ, ccd:RasterA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Raster Calculator arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".    

arcprona:make-closest-facility-analysis-layer.htm
    tools:implements tools:MakeClosestFacilityAnalysisLayerDef.
tools:MakeClosestFacilityAnalysisLayerDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output    
    :input [ :id 1; a ccd:NetworkQ, ccd:LineA, ccd:RatioA ];    
    wf:output [ a ccd:NetworkQ, ccd:LineA, ccd:RatioA ];
    rdfs:comment
        "This is the default annotation for the Make Closest Facility Analysis Layer arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprona:add-locations.htm
    tools:implements tools:AddLocationsDef.
tools:AddLocationsDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:NetworkQ, ccd:LineA, ccd:RatioA ];
    :input [ :id 2; a ccd:CoreConceptQ, ccd:PointA, ccd:NominalA ];
    wf:output [ a ccd:NetworkQ, ccd:LineA, ccd:RatioA ];
    rdfs:comment
        "This is the default annotation for the Add Locations arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprona:solve.htm
    tools:implements tools:SolveDef.
tools:SolveDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:NetworkQ, ccd:LineA, ccd:RatioA ];    
    wf:output [ a ccd:ObjectQ, ccd:PointA, ccd:RatioA ];
    rdfs:comment
        "This is the default annotation for the Solve arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcproco:excel-to-table.htm
    tools:implements tools:ExcelToTableDef.
tools:ExcelToTableDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];    
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Excel To Table arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprodm:join-field.htm
    tools:implements tools:JoinFieldDef.
tools:JoinFieldDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    :input [ :id 2; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Join Field arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcproco:table-to-table.htm
    tools:implements tools:TableToTableDef.
tools:TableToTableDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:RasterA, ccd:NominalA ];    
    wf:output [ a ccd:AmountQ, ccd:VectorRegionA, ccd:RatioA ];
    rdfs:comment
        "This is the default annotation for the Table To Table arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprodm:add-field.htm
    tools:implements tools:AddFieldDef.
tools:AddFieldDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];    
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Add Field arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprodm:calculate-field.htm
    tools:implements tools:CalculateFieldDef, tools:CalculateField2Def.
tools:CalculateFieldDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];    
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Calculate Field arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".    
tools:CalculateField2Def a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];  
	:input [ :id 2; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];     
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Calculate Field arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".
    

arcprodm:add-fields.htm
    tools:implements tools:AddFieldsDef.
tools:AddFieldsDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];    
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Add Fields arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprodm:select-layer-by-attribute.htm
    tools:implements tools:SelectLayerByAttributeDef.
tools:SelectLayerByAttributeDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];    
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Select Layer By Attribute arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprodm:copy-features.htm
    tools:implements tools:CopyFeaturesDef.
tools:CopyFeaturesDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];    
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Copy Features arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprodm:select-layer-by-location.htm
    tools:implements tools:SelectLayerByLocationDef.
tools:SelectLayerByLocationDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ]; 
	:input [ :id 2; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];     
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Select Layer By Location arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprosa:zonal-statistics-as-table.htm
    tools:implements tools:ZonalStatisticsAsTableDef.
tools:ZonalStatisticsAsTableDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:RasterA, ccd:NominalA ];
    :input [ :id 2; a ccd:CoreConceptQ, ccd:VectorRegionA, ccd:NominalA ];
    wf:output [ a ccd:CoreConceptQ, ccd:VectorRegionA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Zonal Statistics As Table arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcproan:intersect.htm
    tools:implements tools:IntersectDef.
tools:IntersectDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    :input [ :id 2; a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    wf:output [ a ccd:CoreConceptQ, ccd:VectorA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Intersect arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprodm:make-xy-event-layer.htm
    tools:implements tools:MakeXyEventLayerDef.
tools:MakeXyEventLayerDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:PointA, ccd:NominalA ];    
    wf:output [ a ccd:CoreConceptQ, ccd:PointA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Make Xy Event Layer arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".

arcprodm:project.htm
    tools:implements tools:ProjectDef.
tools:ProjectDef a :PartialToolSpecification;
    # [SC][TODO] annotate inputs and output
    :input [ :id 1; a ccd:CoreConceptQ, ccd:LayerA, ccd:NominalA ];
    :input [ :id 2; a ccd:CoreConceptQ, ccd:LayerA, ccd:NominalA ];
    wf:output [ a ccd:CoreConceptQ, ccd:LayerA, ccd:NominalA ];
    rdfs:comment
        "This is the default annotation for the Project arcpro tool to be used when an algebra expression is not possible to produce.";
    cct:expression "".
