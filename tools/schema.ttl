:Purpose a rdfs:Class;
    rdfs:comment """A purpose contains information about the purpose of a tool 
    in terms of a `transforge` term.""";
    rdfs:subClassOf [
        a owl:Restriction; owl:onProperty tf:term;
        owl:minQualifiedCardinality 1; owl:maxQualifiedCardinality 1
    ].

:Implementation a rdfs:Class;
    rdfs:comment "A reference to a concrete tool.".

:Specification a rdfs:Class;
    rdfs:comment """A specification is an abstract tool. It may be implemented 
    by multiple concrete tools, because, for example, a tool could be 
    implemented in both QGIS and ArcGIS. Conversely, multiple specifications 
    may be implemented by the same concrete tool, when it can be used in 
    multiple contexts, in the same way that a hammer can be used both to drive 
    a nail into a plank of wood or to break a piggy bank.""";
    rdfs:subClassOf [
        a owl:Restriction; owl:onProperty :input;
        owl:minQualifiedCardinality 1; owl:maxQualifiedCardinality 1
    ], [
        a owl:Restriction; owl:onProperty :implementedBy;
        owl:minQualifiedCardinality 1
    ], [
        a owl:Restriction; owl:onProperty :output;
        owl:minQualifiedCardinality 1; owl:maxQualifiedCardinality 1
    ].

:Workflow a rdfs:Class;
    rdfs:comment """A workflow, or more properly, a workflow schema: an 
    ensemble of concrete tools that *collectively* acts as an implementation 
    for something. This is sometimes also referred to as a supertool.""";
    rdfs:subClassOf [
        a owl:Restriction; owl:onProperty :input;
        owl:minQualifiedCardinality 1; owl:maxQualifiedCardinality 1
    ], [
        a owl:Restriction; owl:onProperty :output;
        owl:minQualifiedCardinality 1; owl:maxQualifiedCardinality 1
    ], [
        a owl:Restriction; owl:onProperty :step;
        owl:minQualifiedCardinality 1
    ].

:Data a rdfs:Class;
    rdfs:comment """A single set of data: either source data or data that is 
    the output of an application of a tool.""".

:DataSeq a rdfs:Class;
    rdfs:comment """A sequence of data, used to enumerate input and output 
    nodes for tool specifications or workflows.""";
    rdfs:subClassOf rdfs:Seq;
    rdfs:subClassOf [ a owl:Restriction;
        owl:onProperty rdf:li; owl:allValuesFrom :Data
    ].

:input a rdfs:Property;
    rdfs:domain :Specification, :Workflow;
    rdfs:range :DataSeq.
:output a rdfs:Property;
    rdfs:domain :Specification, :Workflow;
    rdfs:range :DataSeq.
:implementedBy a rdfs:Property;
    rdfs:domain :Specification;
    rdfs:range :Implementation, :Workflow.
:purpose a rdfs:Property;
    rdfs:domain :Specification;
    rdfs:range :Purpose;.
:step a rdfs:Property;
    rdfs:domain :Workflow;
    rdfs:range :Specification.

# ------------------------------------------------------------------

:tool1 a :Specification;
    :implementedBy _:schema;
    :input ([ a ccd:A ] [ a ccd:B ]);
    :output ([ a ccd:C ]);
    :purpose [
        rdfs:comment "Fuffles inputs 1 and 2.";
        cct:term "fuffle 1 2" ].

:tool2 a :Specification;
    :implementedBy  _:schema;
    :input ([ a ccd:D ] [ a ccd:E ]);
    :output ([ a ccd:F ]);
    :purpose [
        rdfs:comment "Stookles inputs 1 and 2.";
        cct:term "stookle 1 2" ].

_:schema a :Workflow;
    :input (_:1 _:2);
    :step [
        :input (_:1);
        :implementedBy qgis:toolA;
        :output (_:3)
    ], [
        :input (_:1 _:3);
        :implementedBy qgis:toolB;
        :output (_:4)
    ];
    :output (_:4).

:tool a :Specification;
    :implementedBy qgis:toolA, arcgis:toolA;
    :input ([ a ccd:Raster ]);
    :output ([ a ccd:Raster ]);
    :purpose [
        rdfs:comment "Does something to the first input.";
        cct:term "something 1" ]
    ].


