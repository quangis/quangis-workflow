# @Author(s): Eric Top, Enkhbold Nyamsuren, Simon Scheider, 
@prefix ccd: <http://geographicknowledge.de/vocab/CoreConceptData.rdf#> .
@prefix cct: <https://github.com/quangis/cct#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tools: <https://quangis.github.io/tool#> .
@prefix wf: <http://geographicknowledge.de/vocab/Workflow.rdf#> .

[] wf:applicationOf [ a wf:Workflow ;
            rdfs:label "wfwalk_intersectiondensity" ;
            wf:edge _:n1,
                _:n22,
                _:n24,
                [ wf:applicationOf [ a wf:Workflow ;
                            rdfs:label "GenerateIntersections" ;
                            wf:edge _:n1,
                                _:n22,
                                _:n24 ;
                            wf:source _:streets ;
                            dct:subject """    1: ObjectInfo(Nom);        
    join_attr     
    (nIntersections((get_attrL 1), (get_attrL 1)))
    (apply nominalize 
        (pi1 
            (nIntersections((get_attrL 1), (get_attrL 1)))   
        )
    )""" ;
                            rdfs:comment "Generate intersections from line objects by intersecting lines (with minimal cardinality)" ] ;
                    wf:inputx _:streets ;
                    wf:output _:true_intersection ;
                    rdfs:comment "Generate intersections from line objects by intersecting lines (with minimal cardinality)" ;
                    cct:expression """    1: ObjectInfo(Nom);        
    join_attr     
    (nIntersections((get_attrL 1), (get_attrL 1)))
    (apply nominalize 
        (pi1 
            (nIntersections((get_attrL 1), (get_attrL 1)))   
        )
    )""" ],
                [ wf:applicationOf [ a wf:Workflow ;
                            rdfs:label "CalculateObjectVectorDensity" ;
                            wf:edge _:n6,
                                _:n8,
                                _:n9 ;
                            wf:source _:BRdRaReOfInRecInter ;
                            dct:subject """    1: ObjectInfo(Count);        
    join_attr
        (get_attrL 1)
        (apply2 ratio 
            (get_attrR 1)            
            (apply1 (compose size deify) (get_attrL 1))
        )""" ;
                            rdfs:comment "Calculate object density" ] ;
                    wf:inputx _:BRdRaReOfInRecInter ;
                    wf:output _:BRdRaReOfInRecInter4 ;
                    rdfs:comment "Calculate object density" ;
                    cct:expression """    1: ObjectInfo(Count);        
    join_attr
        (get_attrL 1)
        (apply2 ratio 
            (get_attrR 1)            
            (apply1 (compose size deify) (get_attrL 1))
        )""" ],
                [ wf:applicationOf tools:SummarizeWithin ;
                    wf:input1 _:true_intersection ;
                    wf:input2 _:buurten ;
                    wf:output _:BRdRaReOfInRecInter ;
                    rdfs:comment "Count the number of street intersections in each neighborhood",
                        "Counts the number of features from one feature to another based on the spatial relation" ;
                    cct:expression """        1: ObjectInfo(Nom);
        2: ObjectInfo(Nom);
        join_attr
            (get_attrL 2)
            (apply1
                (ocont (get_attrL 1))
                (get_attrL 2)
            )""" ],
                _:n6,
                _:n8,
                _:n9 ;
            wf:source _:buurten,
                _:streets ;
            rdfs:comment "What is the density of street intersections for each neighbourhood in Amsterdam?" ] ;
    wf:inputx _:buurten,
        _:streets ;
    wf:output _:BRdRaReOfInRecInter4 ;
    rdfs:comment "What is the density of street intersections for each neighbourhood in Amsterdam?" .

_:BRdRaReOfInRecInter2 a ccd:ObjectQ,
        ccd:RatioA,
        ccd:VectorTessellationA .

_:BRdRaReOfInRecInter3 a ccd:ObjectQ,
        ccd:VectorTessellationA .

_:endpoints a ccd:PointA .

_:intersections a ccd:NominalA,
        ccd:ObjectQ,
        ccd:PointA .

_:n1 wf:applicationOf tools:FeatureVerticesToPoints ;
    wf:inputx _:streets ;
    wf:output _:endpoints .

_:n22 wf:applicationOf tools:CollectEvents ;
    wf:inputx _:endpoints ;
    wf:output _:intersections .

_:n24 wf:applicationOf tools:SelectLayerByAttribute ;
    wf:inputx _:intersections ;
    wf:output _:true_intersection ;
    rdfs:comment "Select only true intersections (with 3 or more streets (Edge count > 2))" .

_:n6 wf:applicationOf tools:AddGeometryAttributes ;
    wf:inputx _:BRdRaReOfInRecInter ;
    wf:output _:BRdRaReOfInRecInter2 ;
    rdfs:comment "Calculate the area of each neighborhood" .

_:n8 wf:applicationOf tools:AddField ;
    wf:inputx _:BRdRaReOfInRecInter2 ;
    wf:output _:BRdRaReOfInRecInter3 ;
    rdfs:comment "Add a field for intersection density per neighborhood" .

_:n9 wf:applicationOf tools:CalculateField ;
    wf:inputx _:BRdRaReOfInRecInter3 ;
    wf:output _:BRdRaReOfInRecInter4 ;
    rdfs:comment "Calculate intersection density per neighborhood" .

_:BRdRaReOfInRecInter4 a ccd:ObjectQ,
        ccd:RatioA,
        ccd:VectorTessellationA .

_:buurten a ccd:NominalA,
        ccd:ObjectQ,
        ccd:VectorTessellationA ;
    rdfs:comment "vector polygons representing buurten of Amsterdam to local file" .

_:true_intersection a ccd:NominalA,
        ccd:ObjectQ,
        ccd:PointA .

_:BRdRaReOfInRecInter a ccd:CountA,
        ccd:ObjectQ,
        ccd:VectorTessellationA .

_:streets a ccd:LineA,
        ccd:NominalA,
        ccd:ObjectQ .

